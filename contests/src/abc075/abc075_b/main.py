#!/usr/bin/env python3
# from typing import *


# def solve(H: int, W: int, S: List[str]) -> List[str]:
def solve(H, W, S):
    ps = []
    ps.append(["."] * (W + 2))
    for i in range(H):
        t = ["."]
        t.extend(S[i])
        t.append(".")
        ps.append(t)
    ps.append(["."] * (W + 2))

    ans = []

    for i in range(1, H + 1):
        t = ""
        for j in range(1, W + 1):
            if ps[i][j] == "#":
                t += "#"
            else:
                count = 0
                if ps[i - 1][j - 1] == "#":
                    count += 1
                if ps[i][j - 1] == "#":
                    count += 1
                if ps[i + 1][j - 1] == "#":
                    count += 1
                if ps[i - 1][j] == "#":
                    count += 1
                if ps[i + 1][j] == "#":
                    count += 1
                if ps[i - 1][j + 1] == "#":
                    count += 1
                if ps[i][j + 1] == "#":
                    count += 1
                if ps[i + 1][j + 1] == "#":
                    count += 1
                t += (str)(count)
        ans.append(t)

    return ans


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    H, W = map(int, input().split())
    S = []
    for _ in range(H):
        S.append(list(input()))
    a = solve(H, W, S)
    for i in range(H):
        print("".join(a[i]))


if __name__ == "__main__":
    main()
