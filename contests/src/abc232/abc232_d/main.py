#!/usr/bin/env python3
# from typing import *
import queue

# def solve(H: str, W: str, C: List[List[str]]) -> int:


def solve(H, W, C):

    dp = []
    for i in range(H+1):
        dp.append([0]*(W+1))

    for i in range(H):
        for j in range(W):
            if C[i][j] == '.':
                if i - 1 > 0:
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + 1
    for i in range(H):
        print(dp[i])

    # q = queue.Queue()
    # q.put([0, 0])

    # while True:
    #     n = q.get()
    #     # print(n)

    #     check = False
    #     if n[0] + 1 == H:
    #         pass
    #     elif C[n[0]+1][n[1]] == '#':
    #         pass
    #     else:
    #         q.put([n[0]+1, n[1]])
    #         check = True

    #     if n[1] + 1 == W:
    #         pass
    #     elif C[n[0]][n[1]+1] == '#':
    #         pass
    #     else:
    #         q.put([n[0], n[1]+1])
    #         check = True

    #     if check == False:
    #         return n[0] + n[1] + 1


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    H, W = map(int, input().split())
    C = []
    for _ in range(H):
        l = list(input())
        C.append(l)
    a = solve(H, W, C)
    print(a)


if __name__ == '__main__':
    main()
